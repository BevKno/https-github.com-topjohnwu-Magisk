name: Magisk Build

on:
  push:
    branches: [master]
    paths:
      - "app/**"
      - "native/**"
      - "stub/**"
      - "buildSrc/**"
      - "build.py"
      - "gradle.properties"
      - ".github/workflows/build.yml"
  pull_request:
    branches: [master]
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      SCCACHE_DIRECT: false
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Set up sccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          variant: sccache
          key: ${{ runner.os }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}
          max-size: 10000M

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Cache build cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-build-cache-${{ github.sha }}
          restore-keys: ${{ runner.os }}-build-cache-

      - name: Set up NDK
        run: python build.py -v ndk

      - name: Build release
        run: |
          ONDK=/usr/local/lib/android/sdk/ndk/magisk/toolchains/llvm/prebuilt/linux-x86_64
          OUT=$GITHUB_WORKSPACE/native/out/arm64-v8a
          ./build.py -rv binary resetprop magiskpolicy busybox magiskboot
          $ONDK/bin/llvm-strip -s -g $OUT/resetprop $OUT/magiskpolicy $OUT/busybox $OUT/magiskboot
          mv $OUT/busybox out/libbusybox.so
          mv $OUT/resetprop out/libresetprop.so
          mv $OUT/magiskboot out/libmagiskboot.so
          mv $OUT/magiskpolicy out/libmagiskpolicy.so

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ (github.event_name == 'workflow_dispatch' && inputs.debug_enabled) && (success() || failure()) }}
      - name: Stop Gradle daemon
        run: ./gradlew --stop


      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          path: |
            out/libbusybox.so
            out/libresetprop.so
            out/libmagiskboot.so
            out/libmagiskpolicy.so
          compression-level: 0 # no compression
          name: binaries
